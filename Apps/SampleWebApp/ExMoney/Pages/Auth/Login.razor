@page "/auth/login"
@inject AppAuthenticationStateProvider authStateProvider
@inject NavigationManager navManager
@inject ILogger<Login> logger
@using System.ComponentModel.DataAnnotations

@layout AuthLayout

<div class="card mb-0">
    <div class="card-body">
       
        <div class="brand-logo d-flex justify-content-center">
            <a class="text-nowrap logo-img">
                <img src="assets/images/logos/logo.jpg" width="100" height="100" alt="" />
                <span class="fw-bolder d-block fst-italic text-info font-monospace" style="font-size: 25px;"> <span class="text-dark">Ex</span>Money</span>
            </a>
        </div>
        
        <hr >

        <EditForm OnValidSubmit="UserLogin" Model="Input">
            <div class="mb-4 mt-1">
                <DataAnnotationsValidator />
                @if(!authSucceeded)
                {
                    <span class="d-block text-danger text-center">
                        Vos informations Sont Incorrectes. <br>
                        Ou vérifiez votre connexion
                    </span>
                }
            </div>

            <div class="mb-3">
                <label for="exampleInputEmail1" class="form-label">Adresse e-mail</label>
                <input type="email" required class="form-control" @bind-value=@Input.Username id="exampleInputEmail1" aria-describedby="emailHelp">
            </div>
            <div class="mb-4">
                <label for="exampleInputPassword1" class="form-label">Mot de passe</label>
                <input type="password" required @bind-value=@Input.Password class="form-control" id="exampleInputPassword1">
            </div>
            <div class="text-center mb-4">
                <a class="text-primary fw-bold">Mot de passe oublié ?</a>
            </div>
            
            <button type="submit" class='btn btn-primary w-100 py-8 fs-4 mb-4 rounded-2  @(isAuthenticating ? "disabled" : "")'>
               @if(isAuthenticating)
               {
                    <SpinnerLoader ColorClass="text-white" />
               }
               else
               {
                    <span>Connexion</span>
               }
            </button>

            <div class="d-flex align-items-center justify-content-center">
                <a class="text-primary fw-bold ms-2" href="/auth/register">Inscription</a>
            </div>
        </EditForm>
    </div>
</div>


@code{
   
    public LoginModel Input { get; set; } = new();

    public bool isAuthenticating = false;
    public bool authSucceeded = true;

    public async Task UserLogin(EditContext context)
    {
        isAuthenticating = true;
        StateHasChanged();
        
        authSucceeded = await authStateProvider.LogInAsync(Input.Username, Input.Password);        
        authStateProvider.NotifyAuthStateChanged();

        await Task.Delay(TimeSpan.FromSeconds(2.5));
        
        isAuthenticating = false;

        StateHasChanged();

        logger.LogInformation("Auth status is {status}", authSucceeded);

        if(authSucceeded)
        {
            navManager.NavigateTo("/dashboard");
        }
    }

    public class LoginModel
    {
        [Required(ErrorMessage = "L'adresse e-mail est requise.")]
        [EmailAddress(ErrorMessage= "Veillez entrer une Adresse e-mail valide.")] 
        public string Username { get; set; }

        [Required(ErrorMessage = "Le mot de passe est requis.")]
        public string Password { get; set; }
    }

}